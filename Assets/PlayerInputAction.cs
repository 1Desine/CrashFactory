//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/PlayerInputAction.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputAction: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputAction()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputAction"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""146c14b4-62ad-49e8-9287-3fe0904871c7"",
            ""actions"": [
                {
                    ""name"": ""MoveVector3"",
                    ""type"": ""Value"",
                    ""id"": ""e6ecd8fc-3e0b-47ef-93fb-adb8831c5b0d"",
                    ""expectedControlType"": ""Vector3"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""LookVector2"",
                    ""type"": ""Value"",
                    ""id"": ""99044d53-ad1f-44b9-a6ae-f0b3c712c4ee"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""MainActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""751bb9fb-273e-47e3-831d-c27038f354e0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SecondaryActionButton"",
                    ""type"": ""Button"",
                    ""id"": ""1d4f85c2-d357-4900-8d7a-850b093f7d79"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""PivotAroundPointButton"",
                    ""type"": ""Button"",
                    ""id"": ""16e6f509-8113-44e6-a89b-cec54e5d36b4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""CameraZoomFloat"",
                    ""type"": ""Value"",
                    ""id"": ""745eacf9-40d8-40d1-9a06-f8f00e932991"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""3D Vector"",
                    ""id"": ""b3ee6c87-20c8-4cd8-a585-aba7b1f42df4"",
                    ""path"": ""3DVector"",
                    ""interactions"": """",
                    ""processors"": ""NormalizeVector3"",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""af2464f8-8fd0-4dec-849f-b13c71c3e627"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""2689db17-f4a5-45db-a723-3bebf453a86f"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""e1926ee7-7ecf-40dc-8634-d0d819d7a31e"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""4015abcf-a3cb-4cae-8fe2-3fda32778fe9"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""forward"",
                    ""id"": ""3e5f3d36-2992-4bfe-9ecf-01d759edb36f"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""backward"",
                    ""id"": ""85c84dc7-06cd-4481-91fb-728950a06eb7"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MoveVector3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""808fa6f0-ad91-4637-b41b-613d0cc0447e"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""LookVector2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""01cab37f-88fa-46b0-9b08-c33d71ba0216"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""PivotAroundPointButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""59840a42-4db8-4616-b87a-2c2d8efe0ec2"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""CameraZoomFloat"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ce92526e-11cd-4a13-bb62-2df33292aa31"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MainActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dc5b78d7-cda7-4028-93a6-bfb608fb6415"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SecondaryActionButton"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_MoveVector3 = m_Player.FindAction("MoveVector3", throwIfNotFound: true);
        m_Player_LookVector2 = m_Player.FindAction("LookVector2", throwIfNotFound: true);
        m_Player_MainActionButton = m_Player.FindAction("MainActionButton", throwIfNotFound: true);
        m_Player_SecondaryActionButton = m_Player.FindAction("SecondaryActionButton", throwIfNotFound: true);
        m_Player_PivotAroundPointButton = m_Player.FindAction("PivotAroundPointButton", throwIfNotFound: true);
        m_Player_CameraZoomFloat = m_Player.FindAction("CameraZoomFloat", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_MoveVector3;
    private readonly InputAction m_Player_LookVector2;
    private readonly InputAction m_Player_MainActionButton;
    private readonly InputAction m_Player_SecondaryActionButton;
    private readonly InputAction m_Player_PivotAroundPointButton;
    private readonly InputAction m_Player_CameraZoomFloat;
    public struct PlayerActions
    {
        private @PlayerInputAction m_Wrapper;
        public PlayerActions(@PlayerInputAction wrapper) { m_Wrapper = wrapper; }
        public InputAction @MoveVector3 => m_Wrapper.m_Player_MoveVector3;
        public InputAction @LookVector2 => m_Wrapper.m_Player_LookVector2;
        public InputAction @MainActionButton => m_Wrapper.m_Player_MainActionButton;
        public InputAction @SecondaryActionButton => m_Wrapper.m_Player_SecondaryActionButton;
        public InputAction @PivotAroundPointButton => m_Wrapper.m_Player_PivotAroundPointButton;
        public InputAction @CameraZoomFloat => m_Wrapper.m_Player_CameraZoomFloat;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @MoveVector3.started += instance.OnMoveVector3;
            @MoveVector3.performed += instance.OnMoveVector3;
            @MoveVector3.canceled += instance.OnMoveVector3;
            @LookVector2.started += instance.OnLookVector2;
            @LookVector2.performed += instance.OnLookVector2;
            @LookVector2.canceled += instance.OnLookVector2;
            @MainActionButton.started += instance.OnMainActionButton;
            @MainActionButton.performed += instance.OnMainActionButton;
            @MainActionButton.canceled += instance.OnMainActionButton;
            @SecondaryActionButton.started += instance.OnSecondaryActionButton;
            @SecondaryActionButton.performed += instance.OnSecondaryActionButton;
            @SecondaryActionButton.canceled += instance.OnSecondaryActionButton;
            @PivotAroundPointButton.started += instance.OnPivotAroundPointButton;
            @PivotAroundPointButton.performed += instance.OnPivotAroundPointButton;
            @PivotAroundPointButton.canceled += instance.OnPivotAroundPointButton;
            @CameraZoomFloat.started += instance.OnCameraZoomFloat;
            @CameraZoomFloat.performed += instance.OnCameraZoomFloat;
            @CameraZoomFloat.canceled += instance.OnCameraZoomFloat;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @MoveVector3.started -= instance.OnMoveVector3;
            @MoveVector3.performed -= instance.OnMoveVector3;
            @MoveVector3.canceled -= instance.OnMoveVector3;
            @LookVector2.started -= instance.OnLookVector2;
            @LookVector2.performed -= instance.OnLookVector2;
            @LookVector2.canceled -= instance.OnLookVector2;
            @MainActionButton.started -= instance.OnMainActionButton;
            @MainActionButton.performed -= instance.OnMainActionButton;
            @MainActionButton.canceled -= instance.OnMainActionButton;
            @SecondaryActionButton.started -= instance.OnSecondaryActionButton;
            @SecondaryActionButton.performed -= instance.OnSecondaryActionButton;
            @SecondaryActionButton.canceled -= instance.OnSecondaryActionButton;
            @PivotAroundPointButton.started -= instance.OnPivotAroundPointButton;
            @PivotAroundPointButton.performed -= instance.OnPivotAroundPointButton;
            @PivotAroundPointButton.canceled -= instance.OnPivotAroundPointButton;
            @CameraZoomFloat.started -= instance.OnCameraZoomFloat;
            @CameraZoomFloat.performed -= instance.OnCameraZoomFloat;
            @CameraZoomFloat.canceled -= instance.OnCameraZoomFloat;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);
    public interface IPlayerActions
    {
        void OnMoveVector3(InputAction.CallbackContext context);
        void OnLookVector2(InputAction.CallbackContext context);
        void OnMainActionButton(InputAction.CallbackContext context);
        void OnSecondaryActionButton(InputAction.CallbackContext context);
        void OnPivotAroundPointButton(InputAction.CallbackContext context);
        void OnCameraZoomFloat(InputAction.CallbackContext context);
    }
}
